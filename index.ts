/**
 * file generated by chatgpt, provided as is
 */
import { Application, Router } from "https://deno.land/x/oak@v11.1.0/mod.ts";
import { Client } from "https://deno.land/x/postgres@v0.17.0/mod.ts";

const client = new Client({
  user: 'your-username',
  password: 'your-password',
  database: 'your-database-name',
  hostname: 'your-hostname',
  port: 5432, // or your PostgreSQL server port
});

const router = new Router();

// Handle GET requests to /activities?userId={user_id}
router.get('/activities', async (ctx) => {
  const userId = ctx.request.url.searchParams.get('userId');
  if (!userId) {
    ctx.response.status = 400;
    ctx.response.body = { message: 'Missing userId parameter' };
    return;
  }

  try {
    // Connect to the PostgreSQL database
    await client.connect();

    // Query the historical activities for the specified user
    const result = await client.query(
      `SELECT * FROM activities WHERE user_id = $1`,
      userId,
    );

    // Convert the database rows to an array of ActivityEntry objects
    const activities = result.rows.map((row) => {
      return {
        activityType: row.activity_type,
        date: new Date(row.date),
        duration: row.duration,
      };
    });

    // Send the activities as the response body
    ctx.response.status = 200;
    ctx.response.body = activities;
  } catch (error) {
    console.error(error);
    ctx.response.status = 500;
    ctx.response.body = { message: 'Internal server error' };
  } finally {
    await client.end();
  }
});

const app = new Application();
app.use(router.routes());
app.use(router.allowedMethods());

await app.listen({ port: 8000 });